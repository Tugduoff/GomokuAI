name: Gomoku_Workflow
on:
  push:
    branches-ignore:
    - '!ga-ignore-*'
  pull_request:
    branches-ignore:
    - '!ga-ignore-*'

env:
  MIRROR_URL: "git@github.com:EpitechPromo2027/B-AIA-500-NAN-5-1-gomoku-toavina.andriamanampisoa.git"
  EXECUTABLE: "binary"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Coding style errors
        run: |
          check.sh $(pwd) $(pwd)
          while read in lines; do
            title=$(echo $lines | cut -d ':' -f 1)
            error_type=$(echo $lines | cut -d ':' -f 2)
            error_file=$(echo $lines | cut -d ':' -f 3)
            echo "::error title=$title coding style error: $error_file ::$error_type"
          done < coding-style-reports.log
      - name: Checker
        run: |
          if [ -s coding-style-reports.log ]; then
            exit 1
          else
            exit 0
          fi

  check_program_compilation:
    needs: [check_coding_style]
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: make
        timeout-minutes: 2
      - run: make clean

  run_tests:
    needs: [check_coding_style, check_program_compilation]
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: make tests_run
        timeout-minutes: 2
      - run: make clean

  push_to_mirror:
    needs: [check_coding_style, check_program_compilation, run_tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}
